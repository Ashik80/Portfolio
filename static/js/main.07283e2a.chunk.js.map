{"version":3,"sources":["App/features/content/about/ashik.jpg","App/features/content/services/serviceCard/palette.jpg","App/features/content/services/serviceCard/development.jpg","serviceWorker.ts","App/features/navbar/NavToggler.tsx","App/features/navbar/NavList.tsx","App/features/navbar/SideNav.tsx","App/features/navbar/Navbar.tsx","App/features/content/projects/Thumbnail.tsx","App/features/content/projects/imgObject.ts","App/features/content/projects/Projects.tsx","App/features/content/about/Image.tsx","App/features/content/about/InfoCard.tsx","App/features/content/about/Info.tsx","App/features/content/about/AboutMe.tsx","App/features/content/about/About.tsx","App/features/footer/Footer.tsx","App/features/content/services/serviceCard/IconHeader.tsx","App/features/content/services/serviceCard/ServiceCard.tsx","App/features/content/services/skills/SkillsHeader.tsx","App/features/content/services/skills/Progress.tsx","App/features/content/services/skills/Skills.tsx","App/features/content/services/Services.tsx","App/features/content/projects/project/ImageView.tsx","App/features/content/projects/project/ProjectInfo.tsx","App/features/content/projects/project/Project.tsx","App/App.tsx","App/Scroller/ScrollToTop.tsx","index.tsx"],"names":["module","exports","Boolean","window","location","hostname","match","NavToggler","setToggle","style","display","alignItems","className","onClick","NavList","useLocation","to","pathname","color","SideNav","textAlign","padding","Navbar","useState","toggle","labelStyle","position","zIndex","right","bottom","opacity","transition","notActiveLabel","Thumbnail","thumbnail","id","targetId","setTargetId","toString","height","width","borderRadius","overflow","onMouseOver","e","currentTarget","onMouseOut","history","push","src","img","alt","filter","title","description","projectArray","photos","about","Projects","loaded","setLoaded","projectStyle","marginBottom","useEffect","map","proj","key","Image","windowWidth","setWindowWidth","resizeWindow","innerWidth","addEventListener","removeEventListener","InfoCard","h5","p","Info","AboutMe","About","aboutStyle","Footer","IconHeader","icon","header","ServiceCard","custClass","SkillsHeader","Progress","bgcolor","completed","counter","setCounter","fillerStyles","backgroundColor","progressData","Skills","pro","Services","serviceStyle","palette","development","ImageView","setWidth","photo","ProjectInfo","Project","project","setProject","parseInt","params","App","exact","path","component","ScrollToTop","scrollTo","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.07283e2a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ashik.d45df73d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/palette.b144afc7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/development.8d17a17a.jpg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\n\r\ninterface IProps {\r\n    setToggle: (toggle: boolean) => void\r\n}\r\n\r\nconst NavToggler: React.FC<IProps> = ({setToggle}) => {\r\n    return (\r\n        <div style={{display: 'flex', alignItems: 'center'}}>\r\n            <button \r\n                className='navbar-btn' \r\n                onClick={() => setToggle(true)}\r\n            >\r\n                <i className='fas fa-bars'></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavToggler\r\n","import React, { Fragment } from 'react'\r\nimport { NavLink, useLocation } from 'react-router-dom'\r\n\r\nconst NavList = () => {\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <Fragment>\r\n            <li className='navmargin'>\r\n                <NavLink\r\n                    to='/'\r\n                    className='list-item'\r\n                    style={location.pathname === '/' ? { color: 'grey' } : { color: 'black' }}>Projects\r\n                </NavLink>\r\n            </li>\r\n            <li className='navmargin'>\r\n                <NavLink\r\n                    to='/services'\r\n                    className='list-item'\r\n                    style={location.pathname === '/services' ? { color: 'grey' } : { color: 'black' }}>Services\r\n                </NavLink>\r\n            </li>\r\n            <li className='navmargin'>\r\n                <NavLink\r\n                    to='/about'\r\n                    className='list-item'\r\n                    style={location.pathname === '/about' ? { color: 'grey' } : { color: 'black' }}>About\r\n                </NavLink>\r\n            </li>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NavList\r\n","import React from 'react'\r\nimport NavList from './NavList'\r\n\r\ninterface IProps {\r\n    setToggle: (toggle: boolean) => void\r\n}\r\n\r\nconst SideNav: React.FC<IProps> = ({setToggle}) => {\r\n    return (\r\n        <div className='sidenav'>\r\n            <div style={{textAlign: 'right'}}>\r\n                <button className='sidenavbar-btn' onClick={() => setToggle(false)}>\r\n                    <i className='fas fa-times'></i>\r\n                </button>\r\n            </div>\r\n            <ul className='sidenav-list' style={{ textAlign: 'center', padding: 0 }}>\r\n                <NavList />\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","import React, { useState } from 'react'\r\nimport NavToggler from './NavToggler'\r\nimport NavList from './NavList'\r\nimport SideNav from './SideNav'\r\n\r\nconst Navbar = () => {\r\n    const [toggle, setToggle] = useState(false)\r\n\r\n    return (\r\n        <div className='nav'>\r\n            <header className='navbar'>\r\n                <h3 className='logo'>Ashik</h3>\r\n                <ul className='nav-list'>\r\n                    <NavList />\r\n                </ul>\r\n                <NavToggler setToggle={setToggle} />\r\n            </header>\r\n            {toggle && <SideNav setToggle={setToggle} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { SyntheticEvent, useState } from 'react'\r\nimport { IProject } from '../../../models/thumbnail'\r\nimport { history } from '../../../../index'\r\n\r\nconst labelStyle = {\r\n    textAlign: 'right' as 'right',\r\n    color: 'white',\r\n    position: 'absolute' as 'absolute',\r\n    zIndex: 1,\r\n    right: 15,\r\n    bottom: 0,\r\n    opacity: 1,\r\n    transition: 'opacity 1s'\r\n}\r\n\r\nconst notActiveLabel = {\r\n    opacity: 0\r\n}\r\n\r\ninterface IProps {\r\n    thumbnail: IProject\r\n}\r\n\r\nconst Thumbnail: React.FC<IProps> = ({ thumbnail }) => {\r\n    const [targetId, setTargetId] = useState({ id: '' })\r\n\r\n    const hoverHandle = (event: SyntheticEvent<HTMLDivElement>) => {\r\n        setTargetId({ id: event.currentTarget.id })\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='thumbnail'\r\n            id={thumbnail.id.toString()}\r\n            style={{\r\n                height: 250,\r\n                width: thumbnail.width,\r\n                position: 'relative',\r\n                borderRadius: 15,\r\n                overflow: 'hidden'\r\n            }}\r\n            onMouseOver={(e) => hoverHandle(e)}\r\n            onMouseOut={(targetId) => setTargetId({ id: '' })}\r\n            onClick={() => history.push(`/project/${thumbnail.id}`)}\r\n        >\r\n            <img\r\n                src={`./img/projThumbnails/${thumbnail.img}`}\r\n                height='250'\r\n                width={thumbnail.width}\r\n                alt=''\r\n                style={\r\n                    targetId.id === thumbnail.id.toString() ?\r\n                        { position: 'absolute' as 'absolute', filter: 'brightness(60%)' } :\r\n                        {}\r\n                }\r\n            />\r\n            <div style={targetId.id === thumbnail.id.toString() ? labelStyle : notActiveLabel}>\r\n                <h3>{thumbnail.title}</h3>\r\n                <p>{thumbnail.description}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Thumbnail\r\n","import { IProject } from \"../../../models/thumbnail\"\r\n\r\nconst projectArray: IProject[] = [\r\n    {\r\n        id: 1,\r\n        img: './Screenshot (25).png',\r\n        width: 280,\r\n        title: 'Releaf',\r\n        description: 'Improve mental health',\r\n        photos: [\r\n            {\r\n                id: 1,\r\n                title: 'releaf.png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 2,\r\n                title: 'releaf(1).png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 3,\r\n                title: 'releaf(2).png',\r\n                width: 750\r\n            }\r\n        ],\r\n        about: `A social platform meant for spreading positivity and healing the soul and mind. We all\r\n            want it. We can share our deepest thoughts, spread positivity and ask the community for \r\n            advice if we are troubled. It provides real-time communication with other users.\r\n            We tend to not talk about things that are most important. Some of us get really confused at what \r\n            is wrong with us and unable to bear it, we do something destructive and there is no coming back.\r\n            We don't want to lose people that are close to us. To be very honest, the idea of this app came\r\n            to me when a very young actor committed suicide, and this is the best I can do at this moment\r\n            to try make a change. The platform has much room for improvements and it is still under \r\n            development. The technologies used are ASP .NET Core and React JS.`\r\n    },\r\n    {\r\n        id: 2,\r\n        img: './Screenshot (26).png',\r\n        width: 510,\r\n        title: 'Foodhall',\r\n        description: 'A custom food ordering site',\r\n        photos: [\r\n            {\r\n                id: 1,\r\n                title: 'foodhall.png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 2,\r\n                title: 'foodhall(1).png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 3,\r\n                title: 'foodhall(2).png',\r\n                width: 750\r\n            }\r\n        ],\r\n        about: `An e-commerce web app to order food on the go. It has a colorful interface as a food\r\n            ordering site should be. Interactive and easy to use. This app is built on ASP .NET Core\r\n            and jQuery. I used this project for learning so it is not perfect and I didn't take the \r\n            trouble to perfect it. But it is, of course, good enough and provides all the basic \r\n            functionalities.`\r\n    },\r\n    {\r\n        id: 3,\r\n        img: './Screenshot (10).png',\r\n        width: 280,\r\n        title: 'Reactivities',\r\n        description: 'Event managing social media',\r\n        photos: [\r\n            {\r\n                id: 1,\r\n                title: './reactivities.png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 2,\r\n                title: './reactivities(1).png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 3,\r\n                title: './reactivities(2).png',\r\n                width: 750\r\n            }\r\n        ],\r\n        about: `A social platform to create and manage activities. It is similar to events in facebook.\r\n            Users can chat globally with other users, follow other users, upload pictures and much more.\r\n            A complete, very secure site built with ASP .NET Core and React JS.`\r\n    },\r\n    {\r\n        id: 4,\r\n        img: './Screenshot (27).png',\r\n        width: 550,\r\n        title: 'Rafsan the Chotobhai',\r\n        description: 'A youtuber blog',\r\n        photos: [\r\n            {\r\n                id: 1,\r\n                title: './rafsan.png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 2,\r\n                title: './rafsan(1).png',\r\n                width: 750\r\n            }\r\n        ],\r\n        about: `Rafsan The Chotobhai is a youtuber and this site was a prototype of his blog built for \r\n            him. Although the company decided to use another design to reflect his personality, this blog\r\n            site is perfect for any youtuber. HTML, CSS and jQuery does all the magic.`\r\n    },\r\n    {\r\n        id: 5,\r\n        img: './Screenshot (29).png',\r\n        width: 540,\r\n        title: 'Coast 2 Coast',\r\n        description: 'Garments manufacturing factory',\r\n        photos: [\r\n            {\r\n                id: 1,\r\n                title: './c2c.png',\r\n                width: 750\r\n            },\r\n            {\r\n                id: 2,\r\n                title: './c2c(1).png',\r\n                width: 750\r\n            }\r\n        ],\r\n        about: `A design concept for a garments factory website. It shows some basic information of the \r\n            company known as Coast 2 Coast. It was built merely for getting a concept. The company already\r\n            has a site of their own.`\r\n    }\r\n]\r\n\r\nexport default projectArray","import React, { useState, useEffect } from 'react'\r\nimport Thumbnail from './Thumbnail'\r\nimport projectArray from './imgObject'\r\n\r\nconst Projects = () => {\r\n    const [loaded, setLoaded] = useState(0)\r\n\r\n    const projectStyle = {\r\n        marginBottom: 100,\r\n        opacity: loaded,\r\n        transition: 'opacity 0.5s'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoaded(1)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={projectStyle}>\r\n            {projectArray.map((proj) => (\r\n                <div key={proj.id} className='project-thumbnails'>\r\n                    <Thumbnail\r\n                        thumbnail={proj}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects\r\n","import React, { useState, useEffect } from 'react'\r\nimport img from './ashik.jpg'\r\n\r\nconst Image = () => {\r\n    const [windowWidth, setWindowWidth] = useState(0)\r\n\r\n    let resizeWindow = () => {\r\n        setWindowWidth(window.innerWidth)\r\n    }\r\n\r\n    useEffect(() => {\r\n        resizeWindow()\r\n        window.addEventListener('resize', resizeWindow)\r\n        return () =>  window.removeEventListener('resize', resizeWindow)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='myimg'>\r\n            <img src={img} alt='' height={windowWidth <= 580 ? '200' : '400'}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n    h5?: string,\r\n    p?: string\r\n}\r\n\r\nconst InfoCard: React.FC<IProps> = ({ h5, p }) => {\r\n    return (\r\n        <div className='infoSize'>\r\n            <h5>{h5}</h5>\r\n            <p>{p}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoCard\r\n","import React from 'react'\r\nimport InfoCard from './InfoCard'\r\n\r\nconst Info = () => {\r\n    return (\r\n        <div className='info-card-container'>\r\n            <div className='info-card stu'>\r\n                <h2>STUDIES</h2>\r\n                <InfoCard h5='2006-2012' p='Dhanmondi Tutorial (O Level)' />\r\n                <InfoCard h5='2013-2016' p='Cephalon Internation School (A Level)' />\r\n                <InfoCard h5='2016-continued' p='Independent University, Bangladesh (CS)' />\r\n            </div>\r\n\r\n            <div className='info-card exp'>\r\n                <h2>EXPERIENCES</h2>\r\n                <InfoCard h5='2020-continued' p='Fullstack Developer' />\r\n            </div>\r\n\r\n            <div className='info-card int'>\r\n                <h2>INTERESTS</h2>\r\n                <InfoCard p='Mobile app development' />\r\n                <InfoCard p='Artificial Intellegence (AI)' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react'\r\nimport './about.css'\r\n\r\nconst AboutMe = () => {\r\n    return (\r\n        <div className='about-me'>\r\n            <h3>ABOUT ME</h3>\r\n            <p>\r\n                Hi! I am a web developer. I started my journey of being a developer in September, 2019, and\r\n                have acquired some satisfactory skills in two large frameworks, ASP .NET Core and React JS\r\n                (this site is built on React JS). I plan on learning these frameworks even more deeply. I \r\n                love learning new things and believe it makes us grow. I have an interest in psychology and\r\n                spirituality and have done significant amount of research on these subjects. I am ready to\r\n                learn and keep learning and take on challenges. My goal is big and I hope to accomplish it. \r\n                Dream big! \r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AboutMe\r\n","import React, { useState, useEffect } from 'react'\r\nimport Image from './Image'\r\nimport Info from './Info'\r\nimport AboutMe from './AboutMe'\r\n\r\nconst About = () => {\r\n    const [loaded, setLoaded] = useState(0)\r\n\r\n    const aboutStyle = {\r\n        opacity: loaded,\r\n        transition: 'opacity 0.5s'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoaded(1)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='about' style={aboutStyle}>\r\n            <div className='about-card'>\r\n                <Image />\r\n                <AboutMe />\r\n            </div>\r\n            <Info />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className='contact'>\r\n                <i className='fab fa-facebook contact-icon' style={{color: '#3b5998'}}></i>\r\n                <i className='fab fa-github contact-icon'></i>\r\n                <i className='fab fa-whatsapp-square contact-icon' style={{color: '#4fce5d'}}></i>\r\n                <i className='fab fa-discord contact-icon' style={{color: '#7289d9'}} ></i>\r\n                <i className='fab fa-viber contact-icon' style={{color: '#665cac'}}></i>\r\n            </div>\r\n            <small>&copy; 2020 Ashikur Rahman product</small>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n    icon: string,\r\n    header: string\r\n}\r\n\r\nconst IconHeader: React.FC<IProps> = ({ icon, header }) => {\r\n    return (\r\n        <div className='icon-header'>\r\n            <img src={icon} height='50' alt='' />\r\n            <h3>{header}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconHeader\r\n","import React from 'react'\r\nimport IconHeader from './IconHeader'\r\n\r\ninterface IProps {\r\n    icon: string,\r\n    header: string,\r\n    custClass: string,\r\n    description: string\r\n}\r\n\r\nconst ServiceCard: React.FC<IProps> = ({ icon, header, custClass, description }) => {\r\n    return (\r\n        <div className={`service-card ${custClass}`}>\r\n            <IconHeader icon={icon} header={header} />\r\n            <p>{description}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServiceCard\r\n","import React from 'react'\r\n\r\nconst SkillsHeader = () => {\r\n    return (\r\n        <div className='skills-header'>\r\n            <h2>Skills</h2>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkillsHeader\r\n","import React, { useState, useEffect } from 'react'\r\n\r\ninterface IProps {\r\n    bgcolor: string,\r\n    completed: number\r\n}\r\n\r\nconst Progress: React.FC<IProps> = ({bgcolor, completed}) => {\r\n    const [counter, setCounter] = useState(50)\r\n\r\n    const fillerStyles = {\r\n        width: `${counter}%`,\r\n        backgroundColor: bgcolor,\r\n        borderRadius: 'inherit',\r\n        height: '100%',\r\n        textAlign: 'right' as 'right',\r\n        transition: 'width 1s'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCounter(completed)\r\n    }, [completed])\r\n\r\n    return (\r\n        <div className='progress'>\r\n            <div style={fillerStyles}>\r\n                <span className='progress-bar'>{counter}%</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Progress\r\n","import React from 'react'\r\nimport SkillsHeader from './SkillsHeader'\r\nimport Progress from './Progress'\r\n\r\nconst progressData = [\r\n    {\r\n        id: 'HTML',\r\n        bgcolor: 'orangered',\r\n        completed: 95\r\n    },\r\n    {\r\n        id: 'CSS',\r\n        bgcolor: '#2965f1',\r\n        completed: 85\r\n    },\r\n    {\r\n        id: 'JavaScript/jQuery',\r\n        bgcolor: '#f0db4f',\r\n        completed: 64\r\n    },\r\n    {\r\n        id: 'React JS',\r\n        bgcolor: '#61dbfb',\r\n        completed: 72\r\n    },\r\n    {\r\n        id: 'ASP .NET Core',\r\n        bgcolor: '#6020e4',\r\n        completed: 87\r\n    }\r\n]\r\n\r\nconst Skills = () => {\r\n    return (\r\n        <div className='skills'>\r\n            <SkillsHeader />\r\n            <div className='progress-container'>\r\n                {progressData.map(pro => (\r\n                    <div key={pro.id}>\r\n                        <h3>{pro.id}</h3>\r\n                        <Progress bgcolor={pro.bgcolor} completed={pro.completed} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skills\r\n","import React, { useState, useEffect } from 'react'\r\nimport ServiceCard from './serviceCard/ServiceCard'\r\nimport './services.css'\r\nimport palette from './serviceCard/palette.jpg'\r\nimport development from './serviceCard/development.jpg'\r\nimport Skills from './skills/Skills'\r\n\r\nconst Services = () => {\r\n    const [loaded, setLoaded] = useState(0)\r\n\r\n    const serviceStyle = {\r\n        marginBottom: 100,\r\n        opacity: loaded,\r\n        transition: 'opacity 0.5s'\r\n    }\r\n\r\n    useEffect(() => {\r\n        setLoaded(1)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={serviceStyle}>\r\n            <div className='service-card-container'>\r\n                <ServiceCard\r\n                    icon={palette}\r\n                    header='Web Design'\r\n                    custClass='yellow'\r\n                    description='HTML, CSS, Bootstrap, React and much more! Innovative and eye-catching\r\n                    design. I believe in maintaining a standard.'\r\n                />\r\n                <ServiceCard\r\n                    icon={development}\r\n                    header='Web Development'\r\n                    custClass='purple'\r\n                    description='ASP .NET Core. Powerful, fast and secure webapps. Performance and security\r\n                    is my priority'\r\n                />\r\n            </div>\r\n            <div className='skills-container'>\r\n                <Skills />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Services\r\n","import React, { useState, useEffect } from 'react'\r\nimport { IPhoto } from '../../../../models/thumbnail'\r\n\r\ninterface IProps {\r\n    photos: IPhoto[]\r\n}\r\n\r\nconst ImageView: React.FC<IProps> = ({ photos }) => {\r\n    const [width, setWidth] = useState(0)\r\n\r\n    let resizeWindow = () => {\r\n        setWidth(window.innerWidth)\r\n    }\r\n\r\n    useEffect(() => {\r\n        resizeWindow()\r\n        window.addEventListener('resize', resizeWindow)\r\n        return () => window.removeEventListener('resize', resizeWindow)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='image-view'>\r\n            {photos.map(photo => (\r\n                <div key={photo.id} className='photo-container'>\r\n                    <img\r\n                        src={`/img/projects/${photo.title}`}\r\n                        alt=''\r\n                        height={width <= 580 && width > 420 ? '250'\r\n                            : width <= 420 ? '180'\r\n                                : '350'\r\n                        }\r\n                        width={width <= 580 && width > 420 ? '490'\r\n                            : width <= 420 ? '350'\r\n                                : photo.width}\r\n                    />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageView\r\n","import React from 'react'\r\n\r\ninterface IProps {\r\n    title: string,\r\n    about: string\r\n}\r\n\r\nconst ProjectInfo: React.FC<IProps> = ({ title, about }) => {\r\n    return (\r\n        <>\r\n            <h1>{title}</h1>\r\n            <p>{about}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProjectInfo\r\n","import React, { useEffect, useState } from 'react'\r\nimport projectArray from '../imgObject'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { IProject } from '../../../../models/thumbnail'\r\nimport ImageView from './ImageView'\r\nimport '../projects.css'\r\nimport ProjectInfo from './ProjectInfo'\r\n\r\ninterface IProps {\r\n    id: string\r\n}\r\n\r\nconst Project: React.FC<RouteComponentProps<IProps>> = ({ match }) => {\r\n    const [project, setProject] = useState<IProject | null>(null)\r\n\r\n    useEffect(() => {\r\n        setProject(projectArray.filter(project => project.id === parseInt(match.params.id))[0])\r\n        return () => setProject(null)\r\n    }, [match.params.id])\r\n\r\n    return (\r\n        <div>\r\n            {project && (\r\n                <>\r\n                    <ImageView photos={project.photos} />\r\n                    <div className='project-info'>\r\n                        <ProjectInfo title={project.title} about={project.about} />\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project\r\n","import React from 'react'\r\nimport Navbar from './features/navbar/Navbar'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Projects from './features/content/projects/Projects'\r\nimport About from './features/content/about/About'\r\nimport Footer from './features/footer/Footer'\r\nimport Services from './features/content/services/Services'\r\nimport Project from './features/content/projects/project/Project'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='main'>\r\n            <Navbar />\r\n            <div className='container'>\r\n                <Switch>\r\n                    <Route exact path='/Portfolio' component={Projects} />\r\n                    <Route path='/services' component={Services} />\r\n                    <Route path='/about' component={About} />\r\n                    <Route path='/project/:id' component={Project} />\r\n                </Switch>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst ScrollToTop = () => {\r\n    const location = useLocation()\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0)\r\n    }, [location.pathname])\r\n\r\n    return null\r\n}\r\n\r\nexport default ScrollToTop\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App/App';\nimport { Router } from 'react-router-dom';\nimport ScrollToTop from './App/Scroller/ScrollToTop';\nimport { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop />\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}